---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Card from "./Card.astro";
import H1 from "./H1.astro";
import Header from "./Header.astro";
import Container from "../layouts/Container.astro";
import ProjectTabs from "./projects/project-tabs.astro";
// import ProjectFilter from "./projects/project-filter.svelte";
import { ListFilter } from "lucide-astro";
import { Image } from "astro:assets";

type Project = CollectionEntry<"projects">;

interface Props {
  scope?: Project["data"]["scope"];
}

const { scope } = Astro.props;

const enabledTags = Astro.url.searchParams.getAll("tag");
const enabledTechnologies = Astro.url.searchParams.getAll("tech");

const projects = (
  await getCollection("projects", ({ data }) => {
    let shouldShow = true;
    if (scope) {
      shouldShow = data.scope === scope;
    }
    if (!shouldShow) {
      return false;
    }
    if (enabledTags.length > 0) {
      shouldShow = enabledTags.every((tag) => data.tags.includes(tag));
    }
    if (!shouldShow) {
      return false;
    }
    if (enabledTechnologies.length > 0) {
      shouldShow = enabledTechnologies.every((technology) =>
        data.technologies.includes(technology),
      );
    }
    return shouldShow;
  })
).sort((a, b) => {
  // first, sort by featured, then by pubdate
  if (a.data.featured && !b.data.featured) {
    return -1;
  }
  if (!a.data.featured && b.data.featured) {
    return 1;
  }
  return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
});

const tags = Array.from(
  new Set(projects.flatMap((project) => project.data.tags)),
);
const technologies = Array.from(
  new Set(projects.flatMap((project) => project.data.technologies)),
);
---

<!-- TODO: alternate grid where I do three columns, and divide up array into columns -->
<Layout useViewTransitions={true} title="Projects">
  <Container>
    <Header>
      <H1 class="font-display text-balance">Projects</H1>
      <div class="relative w-fit sm:mx-auto">
        <ProjectTabs />
        <!-- <a -->
        <!--   class="absolute -right-4 top-1/2 -translate-y-1/2" -->
        <!--   href={Astro.url.searchParams.has("filter") -->
        <!--     ? Astro.url.pathname -->
        <!--     : `${Astro.url.pathname}?filter`} -->
        <!--   class={Astro.url.searchParams.has("filter") ? "text-rose-500" : ""} -->
        <!-- > -->
        <!--   <ListFilter size={16} /> -->
        <!-- </a> -->
      </div>
      <!-- <ProjectFilter url={Astro.url} {tags} {technologies} /> -->
    </Header>
    <!-- <div class="w-fit mx-auto my-6 p-2 border bg-white text-black -rotate-0">
      Attention: This page is a work in progress.
    </div> -->

    <ul
      role="list"
      class="flex animate-blurFadeIn flex-col md:grid grid-cols-12 p-0 gap-8 my-12 items-center"
    >
      {
        projects.map((project) => (
          <li class={project.data.featured ? "col-span-6" : "col-span-4"}>
            <Card {project}>
              {project.data.image && (
                <Image src={project.data.image} alt={project.data.title} />
                //   formats={["avif", "webp"]}
              )}
            </Card>
          </li>
        ))
      }
    </ul>
  </Container>
</Layout>
