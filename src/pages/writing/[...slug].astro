---
export const prerender = true;
// get all permalinks with weird slug name
import { getCollection, type CollectionEntry, getEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Container from "../../layouts/Container.astro";
import { dateRegex } from "../../lib/constants";
import { makeDateStringIntoDate, formatDate } from "../../lib/utils";
import Note from "../../components/Note.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("notes", ({ slug, id, data }) => {
    return (
      (dateRegex.test(slug) || !dateRegex.test(id)) &&
      (import.meta.env.PROD ? data.draft !== true : true)
    );
  });
  console.log({ blogEntries });
  return blogEntries.map((entry) => ({
    params: {
      slug: dateRegex.test(entry.slug)
        ? entry.slug.replace(dateRegex, "").slice(1)
        : entry.slug,
    },
    props: {
      entry,
      date: dateRegex.test(entry.id) ? makeDateStringIntoDate(entry.id) : null,
    },
  }));
}

interface Props {
  entry: CollectionEntry<"notes">;
  date: Date | null;
}

const { entry, date } = Astro.props;
---

<Layout title={entry.data.title}>
  <Container>
    <Note {entry} date={entry.data.pubDate ?? date} />
  </Container>
</Layout>
