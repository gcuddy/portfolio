---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("projects");

  console.log({ blogEntries });
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <!-- <nav class="max-w-4xl mx-auto py-2 px-6">
    <a href="/" class="text-white font-sans">Back</a>
  </nav> -->
  <article class="p-6 text-white font-sans">
    <div class="max-w-4xl border border-white overflow-hidden mx-auto">
      <div class="bg-white text-black p-4">
        <div class="flex flex-wrap gap-2 items-center justify-between">
          <div class="flex flex-col">
            <span class="inline-flex items-center gap-4">
              <h1
                class="font-display text-3xl md:text-4xl lg:text-5xl font-bold"
              >
                {entry.data.title}
              </h1>
              {
                entry.data.scope === "experiment" && (
                  <div class="bg-rose-500 p-1 rounded-full text-sm uppercase text-white px-2 font-medium">
                    EXPERIMENT
                  </div>
                )
              }
            </span>
            <p class="text-lg/5 opacity-75 text-balance mx-auto max-w-prose">
              {entry.data.description}
            </p>
          </div>
          <span class="opacity-75 shrink-0 text-base">
            {entry.data.dates}
          </span>
        </div>
      </div>
      <!-- hero -->
      <div class="relative">
        {
          entry.data.iframe ? (
            <div>
              <iframe class="border-0" src={entry.data.url} frameborder="0" />
            </div>
          ) : entry.data.image ? (
            <a href={entry.data.url}>
              <img
                loading="lazy"
                decoding="async"
                src={entry.data.image}
                alt={entry.data.title}
              />
            </a>
          ) : null
        }
        <div
          class="absolute bottom-4 right-4 bg-white p-2 rounded flex items-center gap-2 text-sm"
        >
          <a
            class="font-bold flex items-baseline gap-1 hover:underline text-stone-900"
            href={entry.data.url}
            >Link <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2.25"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-external-link translate-y-0.5"
              ><path
                d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
              ></path><polyline points="15 3 21 3 21 9"></polyline><line
                x1="10"
                x2="21"
                y1="14"
                y2="3"></line></svg
            >
          </a>
          <a
            class="font-bold flex items-baseline gap-1 hover:underline text-stone-900"
            href={`https://github.com/${entry.data.github}`}
            >Github <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2.25"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-external-link translate-y-0.5"
              ><path
                d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
              ></path><polyline points="15 3 21 3 21 9"></polyline><line
                x1="10"
                x2="21"
                y1="14"
                y2="3"></line></svg
            ></a
          >
        </div>
      </div>
      <div class="bg-white space-y-4 text-black p-2">
        <div class="grid gap-2 sm:grid-cols-12">
          <dl class="col-span-4">
            <dt>Tags</dt>
            <dd>
              {
                entry.data.tags.map((tag) => (
                  <a href={`/projects/all?filter&tag=${tag}`} class="text-xs inline-block bg-stone-500 text-white rounded-full px-3 py-1 font-semibold mr-2 mb-2">
                    {tag}
                  </a>
                ))
              }
            </dd>
          </dl>
          <dl class="col-span-8">
            <dt>Technologies</dt>
            <dd>
              {
                entry.data.technologies.map((tech) => (
                  <a href={`/projects/all?filter&tech=${tech}`} class="text-xs inline-block bg-stone-500 text-white rounded-full px-3 py-1 font-semibold mr-2 mb-2">
                    {tech}
                  </a>
                ))
              }
            </dd>
          </dl>
        </div>
      </div>

      {
        !!entry.body && (
          <div class="bg-stone-800 p-4 pt-8 pb-24">
            <div class="prose prose-stone prose-invert prose-lg prose-headings:font-sans text-white font-system mx-auto">
              <Content />
            </div>
          </div>
        )
      }
    </div>
  </article>
</Layout>
