---
export const prerender = false;
import H1 from "../../components/H1.astro";
import ProjectTab from "../../components/projects/project-tab.svelte";
import Header from "../../components/Header.astro";
import Window from "../../components/Window.astro";
import Container from "../../layouts/Container.astro";
import Layout from "../../layouts/Layout.astro";
import { dateRegex } from "../../lib/constants";
import { getCollection } from "astro:content";
import WritingTabs from "../../components/writing-tabs.astro";
import { makeDateStringIntoDate } from "../../lib/utils";
import WritingList from "../../components/writing-list.astro";
import Writing from "../../layouts/Writing.astro";
const lookup: Record<string, Date> = {};
const everything = [
  ...(await getCollection("lab", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  })),
];
const writing = everything
  .sort((a, b) => {
    const aDate = a.data.pubDate as Date;
    const bDate = b.data.pubDate as Date;
    return aDate > bDate ? -1 : 1;
  })
  .map((note) => {
    return {
      href: dateRegex.test(note.slug)
        ? `/notes/${note.slug.replace(dateRegex, "").slice(1)}`
        : // If the filename doesn't contain a date, make our url /notes/:s;ig
          !dateRegex.test(note.id)
          ? `/notes/${note.slug}`
          : // Otherwise, just use the explicitly set slug
            note.slug,
      title: note.data.title,
      date: note.data.pubDate as Date,
      viewTransitionName: `note-${note.id}`,
    };
  });
---

<Writing>
  <div slot="header" class="bg-white w-fit mx-auto text-black px-4 mt-4 py-2">
    <p>
      <span class="font-bold">lab notes</span>: notes on creative computers,
      programming, & design.
    </p>
  </div>
  <div>
    <WritingList {writing} />
  </div>
</Writing>
