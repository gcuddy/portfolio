---
import H1 from "../../components/H1.astro";
import Header from "../../components/Header.astro";
import Window from "../../components/Window.astro";
import Container from "../../layouts/Container.astro";
import Layout from "../../layouts/Layout.astro";
import { dateRegex } from "../../lib/constants";
import { getCollection } from "astro:content";
import { makeDateStringIntoDate } from "../../lib/utils";
const lookup: Record<string, Date> = {};
const notes = (
  await getCollection("notes", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  })
).sort((a, b) => {
  const aDate = a.data.pubDate
    ? new Date(a.data.pubDate)
    : makeDateStringIntoDate(a.id);
  lookup[a.id] = aDate;
  const bDate = b.data.pubDate
    ? new Date(b.data.pubDate)
    : makeDateStringIntoDate(b.id);
  lookup[b.id] = bDate;

  return bDate.valueOf() - aDate.valueOf();
});
---

<Layout title="Notes">
  <Container>
    <Header>
      <H1>Notes</H1>
    </Header>
    <Window>
      <div class="bg-white text-black px-4 py-2">
        <p>
          Please check out my <a
            class="underline"
            href="https://guscuddy.substack.com">substack</a
          > for more recent material!
        </p>
      </div>
      <ul class="list-none p-0">
        {
          notes.map((note) => (
            <li class="border-b border-gray-300 py-2 flex justify-between items-center">
              <a
                href={
                  // If slug has a date, remove it and make our url /notes/:slug
                  dateRegex.test(note.slug)
                    ? `/notes/${note.slug.replace(dateRegex, "").slice(1)}`
                    : // If the filename doesn't contain a date, make our url /notes/:s;ig
                    !dateRegex.test(note.id)
                    ? `/notes/${note.slug}`
                    : // Otherwise, just use the explicitly set slug
                      note.slug
                }
              >
                {note.data.title}
              </a>
              <span class="text-base text-stone-400">
                {lookup[note.id]?.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </span>
            </li>
          ))
        }
      </ul>
    </Window>
  </Container>
</Layout>
